on:
  workflow_dispatch:
    inputs:
      os:
        description: 'The type of machine to run the job on'
        default: 'ubuntu-latest'
        required: true
        type: choice
        options:
          - 'ubuntu-latest'
          - 'macos-latest'
          - 'windows-latest'
      uri:
        description: 'URI of JDK archive file to test'
        required: true
        type: string
      test-repository:
        description: 'Check out sources of this JDK repository'
        default: 'openjdk/jdk'
        required: true
        type: string
      test-reference:
        description: 'JDK branch, tag or SHA to check out'
        default: 'master'
        required: true
        type: string
      jtreg-reference:
        description: 'JTReg branch, tag or SHA to check out'
        default: 'master'
        required: true
        type: string
      jtreg-args:
        description: 'Arguments to be passed to JTReg - https://openjdk.org/jtreg/command-help.html'
        default: 'test/jdk/java/lang/HashCode.java'
        required: true
        type: string
        
jobs:
  test:
    name: "Run JDK tests on ${{ github.event.inputs.os }}"
    runs-on: ${{ github.event.inputs.os }}
    steps:
      - name: 'Set up JDK'
        id: setup
        uses: oracle-actions/setup-java@v1
        with:
          uri: ${{ github.event.inputs.uri }}
      - name: 'Print Java version'
        run: java -version
      - name: 'Check out test repository'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.test-repository }}
          ref: ${{ github.event.inputs.test-reference }}
      - name: 'List entries of test/ directory'
        shell: bash
        run: ls -l test
      - name: 'Check out JTReg repository'
        uses: actions/checkout@v4
        with:
          repository: openjdk/jtreg
          ref: ${{ github.event.inputs.jtreg-reference }}
          path: build/jtreg
      - name: 'Build JTReg'
        shell: bash
        working-directory: build/jtreg
        run: bash make/build.sh
      - name: 'Print JTReg version'
        shell: bash
        run: java -jar build/jtreg/build/images/jtreg/lib/jtreg.jar -version
      - name: 'Run JTReg...'
        shell: bash
        run: java -jar build/jtreg/build/images/jtreg/lib/jtreg.jar ${{ github.event.inputs.jtreg-args }}
      - name: 'Always upload test artifacts'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-artifact
          path: |
            JTreport
            JTwork
